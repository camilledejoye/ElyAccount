# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        # Auto-wiring won't work since the two buses avec the same type
        # So you can use DependencyInjection's binding capabilities to clarify this
        # The argument name will then determine which bus to wire
        bind:
            $commandBus: '@messenger.bus.commands'
            # Uncomment when used, error as long as not used somewhere
            # $eventBus: '@messenger.bus.events'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Domain}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    ElyAccount\:
        resource: '../src/Domain/*'
        exclude: '../src/Domain/{Common,Command,Exception,*/Exception}'

    _instanceof:
        ElyAccount\Handler\HandlesCommand:
            tags: [ 'domain.command_handler' ]

    ElyAccount\Client\ClientRepository:
        alias: App\Repository\ClientTestRepository

    ElyAccount\BankAccount\BankAccountRepository:
        alias: App\Repository\BankAccountTestRepository
